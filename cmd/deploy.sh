#!/bin/bash

set -e

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–ª–∞–≥–æ–≤ ===
SKIP_LINT=false
SKIP_FORMAT=false
SKIP_BUILD=false
FORCE=false

# === –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ ===
COMMIT_MSG=""

while [[ "$#" -gt 0 ]]; do
  case $1 in
    --skip-lint) SKIP_LINT=true ;;
    --skip-format) SKIP_FORMAT=true ;;
    --skip-build) SKIP_BUILD=true ;;
    --force) FORCE=true ;;
    -m|--message) COMMIT_MSG="$2"; shift ;;
    *) echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: $1"; exit 1 ;;
  esac
  shift
done

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ commit message ===
if [ -z "$COMMIT_MSG" ]; then
  echo "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞."
  echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh -m '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π' [--skip-lint] [--skip-format] [--skip-build] [--force]"
  exit 1
fi

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏ ===
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [[ "$CURRENT_BRANCH" == "main" && "$FORCE" == false ]]; then
  echo "‚ö†Ô∏è –¢—ã —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –≤ –≤–µ—Ç–∫—É 'main'."
  read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? [y/N] " confirm
  if [[ "$confirm" != "y" ]]; then
    echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."
    exit 1
  fi
fi

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ bun/npm ===
if command -v bun &> /dev/null; then
  RUNNER="bun"
else
  RUNNER="npm"
fi

# === –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–æ–≤ ===
if [[ "$SKIP_LINT" == false ]]; then
  echo "üîç Linting..."
  $RUNNER run lint
fi

if [[ "$SKIP_FORMAT" == false ]]; then
  echo "üé® Formatting..."
  $RUNNER run format
fi

if [[ "$SKIP_BUILD" == false ]]; then
  echo "üîß Building..."
  $RUNNER run build
fi

# === Git status –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ===
git status
if [[ "$FORCE" == false ]]; then
  read -p "–î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–æ–º–º–∏—Ç –∏ –ø—É—à? [y/N] " confirm
  if [[ "$confirm" != "y" ]]; then
    echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."
    exit 1
  fi
fi

# === Git –∫–æ–º–∞–Ω–¥—ã ===
git add .
git commit -m "$COMMIT_MSG"
git push origin "$CURRENT_BRANCH"









# set -e

# if [ -z "$1" ]; then
#   echo "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞."
#   echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh 'commit message'"
#   exit 1
# fi

# # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å bun, –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
# if command -v bun &> /dev/null; then
#   bun run lint
#   bun run format
#   bun run build
# else
#   npm run lint
#   npm run format
#   npm run build
# fi

# # –ü–æ–∫–∞–∑–∞—Ç—å git-—Å—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
# git status
# read -p "–î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? [y/N] " confirm
# if [[ $confirm != "y" ]]; then
#   echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."
#   exit 1
# fi

# git add .
# git commit -m "$1"
# git push origin main

# echo "‚úÖ –î–µ–ø–ª–æ–∏ÃÜ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω."